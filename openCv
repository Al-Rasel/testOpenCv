    private void doCheck() {
       //Mat img = Imgcodecs.imread("/sdcard/regularCapture1585909074281.png");
        Mat img = Imgcodecs.imread("/sdcard/regularCapture_9_1586351880627.png");

       Mat templ = Imgcodecs.imread("/sdcard/Notes/imageIcons/Icon_15_1586351906487.jpg");
        // Mat templ = Imgcodecs.imread("/sdcard/Notes/imageIcons/Icon_0_1586240138469.jpg");

        // / Create the result matrix
        int result_cols = img.cols() - templ.cols() + 1;
        int result_rows = img.rows() - templ.rows() + 1;
        Mat result = new Mat(result_rows, result_cols, TM_SQDIFF);

        // / Do the Matching and Normalize
        Imgproc.matchTemplate(img, templ, result, TM_SQDIFF);
        Core.normalize(result, result, 0, 1, Core.NORM_MINMAX, -1, new Mat());

        // / Localizing the best match with minMaxLoc

        Core.MinMaxLocResult mmr = Core.minMaxLoc(result);

        Point matchLoc = mmr.minLoc;

        Log.e("TAGEEE", " minVal " + mmr.minVal + " maxVal " + mmr.maxVal + " minLoc " + mmr.minLoc + " maxLoc " + mmr.maxLoc);
        // / Show me what you got
        Imgproc.rectangle(img, matchLoc, new Point(matchLoc.x + templ.cols(),
                matchLoc.y + templ.rows()), new Scalar(0, 255, 0), 20);

        // Save the visualized detection.
        //System.out.println("Writing " + outFile);
        imwrite("/sdcard/Notes/imageIcons/Icon-kamrul.png", img);
    }
